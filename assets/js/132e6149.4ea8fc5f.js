"use strict";(self.webpackChunkupb_rustworkshop_github_io=self.webpackChunkupb_rustworkshop_github_io||[]).push([[4406],{1578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"command_line_applications/index","title":"Command Line Applications","description":"Introduction","source":"@site/docs/command_line_applications/index.md","sourceDirName":"command_line_applications","slug":"/command_line_applications/","permalink":"/docs/command_line_applications/","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-RustWorkshop/upb-rustworkshop.github.io/edit/main/docs/command_line_applications/index.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Welcome","permalink":"/docs/intro"},"next":{"title":"Tauri Desktop Applications","permalink":"/docs/tauri/"}}');var a=t(4848),s=t(8453);const r={sidebar_position:2},l="Command Line Applications",o={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Understanding Ratatui",id:"understanding-ratatui",level:2},{value:"Useful Links",id:"useful-links",level:3},{value:"Key Features",id:"key-features",level:3},{value:"Example: Creating a Simple Ratatui Application",id:"example-creating-a-simple-ratatui-application",level:4},{value:"Getting an OpenWeather API Key",id:"getting-an-openweather-api-key",level:2},{value:"Steps to Get an API Key",id:"steps-to-get-an-api-key",level:3},{value:"Example API Request",id:"example-api-request",level:3},{value:"Example Rust Request using Reqwest",id:"example-rust-request-using-reqwest",level:3},{value:"Example API Response",id:"example-api-response",level:3},{value:"Understanding the Starter Code",id:"understanding-the-starter-code",level:2},{value:"Project Structure",id:"project-structure",level:3},{value:"<code>main.rs</code>",id:"mainrs",level:3},{value:"<code>connection.rs</code>",id:"connectionrs",level:3},{value:"<code>ui.rs</code>",id:"uirs",level:3},{value:"<code>handler.rs</code>",id:"handlerrs",level:3},{value:"What to do",id:"what-to-do",level:2},{value:"Final Touch: Enhancing the App",id:"final-touch-enhancing-the-app",level:2},{value:"Example UI Layout",id:"example-ui-layout",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"command-line-applications",children:"Command Line Applications"})}),"\n",(0,a.jsx)(n.h1,{id:"workshop-building-a-weather-cli-app-in-rust-using-ratatui-and-openweather-api",children:"Workshop: Building a Weather CLI App in Rust using Ratatui and OpenWeather API"}),"\n",(0,a.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,a.jsxs)(n.p,{children:["In this workshop, we will build a Command Line Interface (CLI) weather application in Rust using ",(0,a.jsx)(n.a,{href:"https://github.com/ratatui-org/ratatui",children:"Ratatui"})," and the ",(0,a.jsx)(n.a,{href:"https://openweathermap.org/api",children:"OpenWeather API"}),". The application will fetch weather information for a set of cities and display it in a structured UI using Ratatui."]}),"\n",(0,a.jsx)(n.p,{children:"By the end of the workshop, participants will:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Understand how to use Ratatui to create CLI applications with UI components."}),"\n",(0,a.jsx)(n.li,{children:"Learn how to interact with the OpenWeather API to fetch weather data."}),"\n",(0,a.jsx)(n.li,{children:"Implement a simple weather application and extend it with creative features."}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"understanding-ratatui",children:"Understanding Ratatui"}),"\n",(0,a.jsx)(n.p,{children:"Ratatui is a library for building text-based user interfaces in Rust. It provides a variety of widgets that allow you to create interactive CLI applications."}),"\n",(0,a.jsx)(n.h3,{id:"useful-links",children:"Useful Links"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ratatui.rs/",children:"Ratatui Webpage"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://docs.rs/ratatui/latest/ratatui/",children:"Ratatui Documentation"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/ratatui/ratatui/tree/main/examples",children:"Ratatui Examples"})}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Layout System"}),": Splits terminal space into multiple sections."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Widgets"}),": Predefined UI components like lists, tables, graphs, and gauges."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Event Handling"}),": Supports keyboard and mouse interactions."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-creating-a-simple-ratatui-application",children:"Example: Creating a Simple Ratatui Application"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"use ratatui::backend::CrosstermBackend;\nuse ratatui::Terminal;\nuse std::io;\n\nfn main() -> Result<(), Box<dyn std::error::Error>> {\n    let backend = CrosstermBackend::new(io::stdout());\n    let mut terminal = Terminal::new(backend)?;\n    terminal.clear()?;\n    terminal.draw(|frame| {\n        let size = frame.size();\n        // Render widgets here\n    })?;\n    Ok(())\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"getting-an-openweather-api-key",children:"Getting an OpenWeather API Key"}),"\n",(0,a.jsx)(n.p,{children:"To fetch weather data, we need an API key from OpenWeather."}),"\n",(0,a.jsx)(n.h3,{id:"steps-to-get-an-api-key",children:"Steps to Get an API Key"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["Go to ",(0,a.jsx)(n.a,{href:"https://openweathermap.org/api",children:"OpenWeather API"})," and sign up."]}),"\n",(0,a.jsx)(n.li,{children:'Log in and navigate to "API Keys" in your profile.'}),"\n",(0,a.jsx)(n.li,{children:"Generate a new API key."}),"\n",(0,a.jsx)(n.li,{children:"Use this key in your requests to the OpenWeather API."}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example-api-request",children:"Example API Request"}),"\n",(0,a.jsx)(n.p,{children:'To fetch the weather for a city (e.g., "Bucharest"):'}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'$ curl "http://api.openweathermap.org/data/2.5/weather?q=Bucharest&appid=YOUR_API_KEY&units=metric"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"example-rust-request-using-reqwest",children:"Example Rust Request using Reqwest"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:'use reqwest;\nuse serde_json::Value;\n\n#[tokio::main]\nasync fn main() -> Result<(), Box<dyn std::error::Error>> {\n    let city = "Bucharest";\n    let api_key = "YOUR_API_KEY";\n    let url = format!("http://api.openweathermap.org/data/2.5/weather?q={}&appid={}&units=metric", city, api_key);\n\n    let response = reqwest::get(&url).await?.text().await?;\n    let weather_data: Value = serde_json::from_str(&response)?;\n    println!("Weather Data: {:?}", weather_data);\n\n    Ok(())\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"example-api-response",children:"Example API Response"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n    "coord": {"lon": 26.1063, "lat": 44.4328},\n    "weather": [{"id": 800, "main": "Clear", "description": "clear sky", "icon": "01d"}],\n    "main": {\n        "temp": 12.34,\n        "feels_like": 10.78,\n        "pressure": 1013,\n        "humidity": 56\n    },\n    "wind": {"speed": 3.6, "deg": 270},\n    "name": "Bucharest"\n}\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"understanding-the-starter-code",children:"Understanding the Starter Code"}),"\n",(0,a.jsx)(n.h3,{id:"project-structure",children:"Project Structure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"weather-cli/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main.rs\n\u2502   \u251c\u2500\u2500 lib.rs\n\u2502   \u251c\u2500\u2500 app.rs\n\u2502   \u251c\u2500\u2500 connection.rs\n\u2502   \u251c\u2500\u2500 event.rs\n\u2502   \u251c\u2500\u2500 handler.rs\n\u2502   \u251c\u2500\u2500 tui.rs\n\u2502   \u251c\u2500\u2500 ui.rs\n\u2502\n\u251c\u2500\u2500 Cargo.toml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"mainrs",children:(0,a.jsx)(n.code,{children:"main.rs"})}),"\n",(0,a.jsx)(n.p,{children:"Responsible for initializing the terminal and starting the event loop."}),"\n",(0,a.jsx)(n.h3,{id:"connectionrs",children:(0,a.jsx)(n.code,{children:"connection.rs"})}),"\n",(0,a.jsx)(n.p,{children:"Handles API calls to OpenWeather."}),"\n",(0,a.jsx)(n.h3,{id:"uirs",children:(0,a.jsx)(n.code,{children:"ui.rs"})}),"\n",(0,a.jsx)(n.p,{children:"Responsible for rendering UI elements."}),"\n",(0,a.jsx)(n.h3,{id:"handlerrs",children:(0,a.jsx)(n.code,{children:"handler.rs"})}),"\n",(0,a.jsx)(n.p,{children:"Handles keyboard input events and updates the application's state."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-rust",children:"use crate::app::{App, AppResult};\nuse crossterm::event::KeyEvent;\n\n/// Handles the key events and updates the state of [`App`].\npub fn handle_key_events(key_event: KeyEvent, app: &mut App) -> AppResult<()> {\n    match key_event.code {\n        crossterm::event::KeyCode::Char('q') => {\n            app.running = false; // Quit the application when 'q' is pressed\n        }\n        crossterm::event::KeyCode::Up => {\n            // Move up in the list of cities\n        }\n        crossterm::event::KeyCode::Down => {\n            // Move down in the list of cities\n        }\n        _ => {}\n    }\n    Ok(())\n}\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["For a better overview of the TODO's in the starter code, install ",(0,a.jsx)(n.strong,{children:"TODO tree"})," extenstion in VSCode"]})}),"\n",(0,a.jsx)(n.h2,{id:"what-to-do",children:"What to do"}),"\n",(0,a.jsx)(n.p,{children:"Follow the TODOs in the application in order to create a weather app. The application should show a list of\ncities, and information about each of them. When selecting each city, the app will show the current temperature, wind speed and any other useful information\nyou may find (eg: charts, graphs...)"}),"\n",(0,a.jsx)(n.h2,{id:"final-touch-enhancing-the-app",children:"Final Touch: Enhancing the App"}),"\n",(0,a.jsx)(n.p,{children:"Once the basic structure is in place, you can:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Add ",(0,a.jsx)(n.strong,{children:"city selection"})," functionality."]}),"\n",(0,a.jsxs)(n.li,{children:["Display additional weather details like ",(0,a.jsx)(n.strong,{children:"humidity, wind speed, and pressure"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Use ",(0,a.jsx)(n.strong,{children:"charts"})," to visualize temperature trends."]}),"\n",(0,a.jsx)(n.li,{children:"Extend UI with more widgets."}),"\n",(0,a.jsx)(n.li,{children:"Cache API responses to reduce requests."}),"\n",(0,a.jsx)(n.li,{children:"Add configuration settings for preferred units (Celsius/Fahrenheit)."}),"\n",(0,a.jsx)(n.li,{children:"Use your imagination to create an unique weather app"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"example-ui-layout",children:"Example UI Layout"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"+----------------------------------+\n|        Weather CLI App          |\n+----------------------------------+\n| Cities:                         |\n| [ ] Bucharest                   |\n| [ ] London                      |\n| [X] New York                    |\n+----------------------------------+\n| Weather Details:                 |\n| Temp: 12\xb0C                       |\n| Humidity: 85%                    |\n| Wind Speed: 5 m/s                |\n+----------------------------------+\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(6540);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);