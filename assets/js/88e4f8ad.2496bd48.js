"use strict";(self.webpackChunkupb_rustworkshop_github_io=self.webpackChunkupb_rustworkshop_github_io||[]).push([[589],{6058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"slint/index","title":"Slint Desktop Applications","description":"Course Support","source":"@site/docs/slint/index.md","sourceDirName":"slint","slug":"/slint/","permalink":"/docs/slint/","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-RustWorkshop/upb-rustworkshop.github.io/edit/main/docs/slint/index.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Next Challenges","permalink":"/docs/tauri/next-challenges"},"next":{"title":"Axum Web Servers","permalink":"/docs/web_server/"}}');var l=n(4848),s=n(8453);const o={sidebar_position:3},r="Slint Desktop Applications",d={},a=[{value:"Course Support",id:"course-support",level:2},{value:"To-Do List App with Slint and Rust",id:"to-do-list-app-with-slint-and-rust",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Project Structure:",id:"project-structure",level:3},{value:"Code Breakdown",id:"code-breakdown",level:3},{value:"Step 1: Create the UI and Initialize the Model",id:"step-1-create-the-ui-and-initialize-the-model",level:4},{value:"Step 2: Create the Todo Model",id:"step-2-create-the-todo-model",level:4},{value:"Step 3: Implement add_item Callback",id:"step-3-implement-add_item-callback",level:4},{value:"Step 4: Implement clear_all Callback",id:"step-4-implement-clear_all-callback",level:4},{value:"Step 5: Run the UI",id:"step-5-run-the-ui",level:4},{value:"Running the application",id:"running-the-application",level:3}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"slint-desktop-applications",children:"Slint Desktop Applications"})}),"\n",(0,l.jsx)(t.h2,{id:"course-support",children:"Course Support"}),"\n",(0,l.jsx)("iframe",{src:"/pdf/introduction_to_slint.pdf",loading:"lazy",width:"700",height:"480",children:(0,l.jsxs)(t.p,{children:["Cannot display pdf, you can\n",(0,l.jsx)("a",{href:"/pdf/introduction_to_slint.pdf",children:"download the course"}),"."]})}),"\n",(0,l.jsxs)(t.p,{children:[(0,l.jsx)("a",{href:"/pdf/introduction_to_slint.pdf",children:"Download the course"}),"."]}),"\n",(0,l.jsx)(t.h2,{id:"to-do-list-app-with-slint-and-rust",children:"To-Do List App with Slint and Rust"}),"\n",(0,l.jsxs)(t.p,{children:["This is a simple to-do list app using the ",(0,l.jsx)(t.strong,{children:"Slint"})," GUI framework and ",(0,l.jsx)(t.strong,{children:"Rust"}),". It demonstrates how to manage UI elements, define interactive events, and manage state using the ",(0,l.jsx)(t.code,{children:"Rc"})," (reference-counted) type for shared ownership."]}),"\n",(0,l.jsx)(t.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(t.p,{children:"Before getting started, make sure you have the following installed:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Rust"}),": You can install it from the official Rust website ",(0,l.jsx)(t.a,{href:"https://www.rust-lang.org/tools/install",children:"here"}),"."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.strong,{children:"Slint"}),": Install Slint using Rust's package manager by adding it to your ",(0,l.jsx)(t.code,{children:"Cargo.toml"})," or by using ",(0,l.jsx)(t.code,{children:"cargo add slint"}),"."]}),"\n"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-toml",children:'[dependencies]\nslint = "0.1"\n'})}),"\n",(0,l.jsx)(t.h3,{id:"project-structure",children:"Project Structure:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"src/main.rs"}),": List backend logic (implemented in Rust)."]}),"\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.code,{children:"ui/start_window.slint"}),": User interface (created with Slint)."]}),"\n"]}),"\n",(0,l.jsx)(t.h3,{id:"code-breakdown",children:"Code Breakdown"}),"\n",(0,l.jsx)(t.h4,{id:"step-1-create-the-ui-and-initialize-the-model",children:"Step 1: Create the UI and Initialize the Model"}),"\n",(0,l.jsx)(t.p,{children:"In the main.rs file, we initialize the AppWindow and set up the necessary data structures to hold the to-do list items."}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"fn main() -> Result<(), Box<dyn Error>> {\n    let ui = AppWindow::new()?;\n"})}),"\n",(0,l.jsx)(t.p,{children:"Here, we initialize the AppWindow, which represents the UI. AppWindow::new() returns a result that we unwrap using ?."}),"\n",(0,l.jsx)(t.h4,{id:"step-2-create-the-todo-model",children:"Step 2: Create the Todo Model"}),"\n",(0,l.jsxs)(t.p,{children:["We use ",(0,l.jsx)(t.code,{children:"Rc<VecModel>"})," to hold the to-do items. Rc is a reference-counted pointer that allows multiple parts of the code to share ownership of the to-do model."]}),"\n",(0,l.jsx)(t.p,{children:"let todo_model = Rc::new(VecModel::from(vec![]));\nui.set_todo_model(todo_model.clone().into());\nWe start with an empty to-do list (Vec::new()), which will later be updated with user input. We pass this model to the UI via ui.set_todo_model()."}),"\n",(0,l.jsx)(t.h4,{id:"step-3-implement-add_item-callback",children:"Step 3: Implement add_item Callback"}),"\n",(0,l.jsx)(t.p,{children:"The first interactive feature is adding a to-do item. We define the callback for adding items to the model that takes as parameters the text from the input field."}),"\n",(0,l.jsx)(t.p,{children:"let todo_model_adding = todo_model.clone();\nThis callback will be executed when the Add Item button is clicked. It simply adds a new to-do item to the model."}),"\n",(0,l.jsx)(t.h4,{id:"step-4-implement-clear_all-callback",children:"Step 4: Implement clear_all Callback"}),"\n",(0,l.jsx)(t.p,{children:"Next, we have to define a callback to clear all to-do items from the list:"}),"\n",(0,l.jsx)(t.p,{children:"let todo_model_clearing = todo_model.clone();"}),"\n",(0,l.jsxs)(t.p,{children:["Create a callback that is tied to the ",(0,l.jsx)(t.code,{children:"Clear All"})," button. When clicked, it clears the entire list of to-do items."]}),"\n",(0,l.jsx)(t.h4,{id:"step-5-run-the-ui",children:"Step 5: Run the UI"}),"\n",(0,l.jsx)(t.p,{children:"Finally, we run the application:"}),"\n",(0,l.jsx)(t.p,{children:"ui.run()?;\nOk(())\n}\nThis will start the event loop and display the UI, waiting for user interactions."}),"\n",(0,l.jsx)(t.h3,{id:"running-the-application",children:"Running the application"}),"\n",(0,l.jsx)(t.p,{children:"Run the following command:"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"cargo run\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(6540);const l={},s=i.createContext(l);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);