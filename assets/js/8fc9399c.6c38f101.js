"use strict";(self.webpackChunkupb_rustworkshop_github_io=self.webpackChunkupb_rustworkshop_github_io||[]).push([[4725],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:n},e.children)}},9716:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"tauri/getting-started","title":"Getting Started","description":"Step 0: Verify Your Setup","source":"@site/docs/tauri/1.getting-started.md","sourceDirName":"tauri","slug":"/tauri/getting-started","permalink":"/docs/tauri/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-RustWorkshop/upb-rustworkshop.github.io/edit/main/docs/tauri/1.getting-started.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Getting Started"},"sidebar":"tutorialSidebar","previous":{"title":"MacOs","permalink":"/docs/tauri/prerequisites/macOs"},"next":{"title":"Build Your Own Text Editor","permalink":"/docs/tauri/build-your-own-text-editor/"}}');var s=t(4848),i=t(8453);const l={title:"Getting Started"},o=void 0,d={},c=[{value:"<strong>Step 0: Verify Your Setup</strong>",id:"step-0-verify-your-setup",level:2},{value:"<strong>Step 1: Scaffold the Project</strong>",id:"step-1-scaffold-the-project",level:2},{value:"<strong>Step 2: Navigate to the Project Folder</strong>",id:"step-2-navigate-to-the-project-folder",level:2},{value:"<strong>Step 3: Install Tauri API for Deno</strong>",id:"step-3-install-tauri-api-for-deno",level:2},{value:"<strong>Step 4: Configure Vite</strong>",id:"step-4-configure-vite",level:2},{value:"<strong>Step 5: Set Up the Frontend</strong>",id:"step-5-set-up-the-frontend",level:2},{value:"<strong>Step 6: Set Up the Tauri Backend</strong>",id:"step-6-set-up-the-tauri-backend",level:2},{value:"<strong>Step 7: Run the Development Server</strong>",id:"step-7-run-the-development-server",level:2},{value:"<strong>Step 8: Build the App</strong>",id:"step-8-build-the-app",level:2},{value:"<strong>Project Structure</strong>",id:"project-structure",level:2}];function a(e){const n={code:"code",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"step-0-verify-your-setup",children:(0,s.jsx)(n.strong,{children:"Step 0: Verify Your Setup"})}),"\n",(0,s.jsx)(n.p,{children:"After installing the prerequisites, verify your setup by running the following commands in your terminal:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Deno"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno --version\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rust"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"rustc --version\ncargo --version\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Node.js"})," (if installed):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"node --version\nnpm --version\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-1-scaffold-the-project",children:(0,s.jsx)(n.strong,{children:"Step 1: Scaffold the Project"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open your terminal."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the following command to create a new Tauri project with Vite and TypeScript:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno run -A npm:create-tauri-app@latest\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Follow the prompts"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u2714 Project name \xb7 your-tauri-project"}),"\n",(0,s.jsx)(n.li,{children:"\u2714 Identifier \xb7 com.your-tauri-project.app"}),"\n",(0,s.jsx)(n.li,{children:"\u2714 Choose which language to use for your frontend \xb7 TypeScript / JavaScript - (pnpm, yarn, npm, deno, bun)"}),"\n",(0,s.jsx)(n.li,{children:"\u2714 Choose your package manager \xb7 deno"}),"\n",(0,s.jsx)(n.li,{children:"\u2714 Choose your UI template \xb7 Vanilla"}),"\n",(0,s.jsx)(n.li,{children:"\u2714 Choose your UI flavor \xb7 TypeScript"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-2-navigate-to-the-project-folder",children:(0,s.jsx)(n.strong,{children:"Step 2: Navigate to the Project Folder"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Move into the project folder:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd your-tauri-project\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-3-install-tauri-api-for-deno",children:(0,s.jsx)(n.strong,{children:"Step 3: Install Tauri API for Deno"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Install the Tauri API for Deno:","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno add @tauri-apps/api\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-4-configure-vite",children:(0,s.jsx)(n.strong,{children:"Step 4: Configure Vite"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"vite.config.ts"})," file in your project and ensure it looks like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { defineConfig } from "vite";\nimport deno from "vite-plugin-deno";\n\nexport default defineConfig({\n  plugins: [deno()],\n});\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If you don\u2019t have ",(0,s.jsx)(n.code,{children:"vite-plugin-deno"})," installed, add it:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno add vite-plugin-deno\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-5-set-up-the-frontend",children:(0,s.jsx)(n.strong,{children:"Step 5: Set Up the Frontend"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"src/main.ts"})," file and replace its content with this basic TypeScript example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { invoke } from "@tauri-apps/api";\n\n// Create a button that calls a Tauri command\nconst app = document.querySelector<HTMLDivElement>("#app")!;\napp.innerHTML = `\n  <h1>Hello, Tauri + Vite!</h1>\n  <button id="greet-btn">Say Hello</button>\n  <p id="message"></p>\n`;\n\n// Add event listener to the button\nconst greetBtn = document.querySelector<HTMLButtonElement>("#greet-btn")!;\nconst message = document.querySelector<HTMLParagraphElement>("#message")!;\n\ngreetBtn.addEventListener("click", async () => {\n  const response = await invoke("greet", { name: "Tauri User" });\n  message.textContent = response as string;\n});\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-6-set-up-the-tauri-backend",children:(0,s.jsx)(n.strong,{children:"Step 6: Set Up the Tauri Backend"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Open the ",(0,s.jsx)(n.code,{children:"src-tauri/src/main.rs"})," file and add a simple command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#[tauri::command]\nfn greet(name: &str) -> String {\n    format!("Hello, {}!", name)\n}\n\nfn main() {\n    tauri::Builder::default()\n        .invoke_handler(tauri::generate_handler![greet])\n        .run(tauri::generate_context!())\n        .expect("error while running tauri application");\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-7-run-the-development-server",children:(0,s.jsx)(n.strong,{children:"Step 7: Run the Development Server"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install dependecies:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno install\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start the Tauri development medium:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno task tauri dev\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will open a desktop window with your app running."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"step-8-build-the-app",children:(0,s.jsx)(n.strong,{children:"Step 8: Build the App"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build the production version:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"deno task build\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"The installer will be located in:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Windows"}),": ",(0,s.jsx)(n.code,{children:".msi"})," file in ",(0,s.jsx)(n.code,{children:"src-tauri/target/release/bundle/msi/"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Linux"}),": ",(0,s.jsx)(n.code,{children:".deb"})," or ",(0,s.jsx)(n.code,{children:".AppImage"})," file in ",(0,s.jsx)(n.code,{children:"src-tauri/target/release/bundle/"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"macOS"}),": ",(0,s.jsx)(n.code,{children:".dmg"})," file in ",(0,s.jsx)(n.code,{children:"src-tauri/target/release/bundle/dmg/"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"project-structure",children:(0,s.jsx)(n.strong,{children:"Project Structure"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"tauri-vite-app/\n\u251c\u2500 src/            # Vite frontend (TypeScript)\n\u2502  \u251c\u2500 main.ts      # Entry point\n\u2502  \u2514\u2500 assets/      # Static assets\n\u251c\u2500 src-tauri/      # Tauri backend (Rust)\n\u2502  \u251c\u2500 src/         # Rust source files\n\u2502  \u2514\u2500 tauri.conf.json # Tauri configuration\n\u251c\u2500 deno.json       # Deno configuration\n\u2514\u2500 vite.config.ts  # Vite configuration\n"})}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}}}]);