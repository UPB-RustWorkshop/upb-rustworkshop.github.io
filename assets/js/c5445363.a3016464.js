"use strict";(self.webpackChunkupb_rustworkshop_github_io=self.webpackChunkupb_rustworkshop_github_io||[]).push([[8510],{8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(6540);const t={},o=s.createContext(t);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:n},e.children)}},9009:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"web_server/getting-started","title":"Getting started","description":"Before starting building your HTTP server, ensure your system meets the requirements from the Prerequisites section.","source":"@site/docs/web_server/1.getting-started.md","sourceDirName":"web_server","slug":"/web_server/getting-started","permalink":"/docs/web_server/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-RustWorkshop/upb-rustworkshop.github.io/edit/main/docs/web_server/1.getting-started.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Getting started"},"sidebar":"tutorialSidebar","previous":{"title":"Prerequisites","permalink":"/docs/web_server/prerequisites"},"next":{"title":"Build a system monitor","permalink":"/docs/web_server/build-a-system-monitor/"}}');var t=r(4848),o=r(8453);const i={title:"Getting started"},l=void 0,d={},a=[{value:"Scaffold your project",id:"scaffold-your-project",level:2},{value:"Project structure",id:"project-structure",level:3},{value:"Add dependencies",id:"add-dependencies",level:2},{value:"Scaffold your server",id:"scaffold-your-server",level:2},{value:"Run in development mode",id:"run-in-development-mode",level:2},{value:"Build and run",id:"build-and-run",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Before starting building your HTTP server, ensure your system meets the requirements from the ",(0,t.jsx)(n.a,{href:"/docs/web_server/prerequisites",children:"Prerequisites"})," section."]}),"\n",(0,t.jsx)(n.h2,{id:"scaffold-your-project",children:"Scaffold your project"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Open a terminal"}),"\n",(0,t.jsx)(n.li,{children:"Run the following command:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir upb-rust-workshop && cd upb-rust-workshop\ncargo init\n"})}),"\n",(0,t.jsx)(n.h3,{id:"project-structure",children:"Project structure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"upb-rust-workshop/\n\u251c\u2500 src/\n\u2502  \u2514\u2500 main.rs      # Entry point\n\u251c\u2500 target/         # Build artifacts\n\u251c\u2500 .gitignore      # Git ignore file\n\u251c\u2500 Cargo.lock      # Dependency lock file\n\u2514\u2500 Cargo.toml      # Project manifest\n"})}),"\n",(0,t.jsx)(n.h2,{id:"add-dependencies",children:"Add dependencies"}),"\n",(0,t.jsx)(n.p,{children:"Run the following commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo add axum\ncargo add tokio --features=full\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Next, check that your ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," file looks like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'title="Cargo.toml"',children:'[package]\nname = "upb-rust-workshop"\nversion = "0.1.0"\nedition = "2024"\n\n[dependencies]\naxum = "0.8.1"\ntokio = { version = "1.44.1", features = ["full"] }\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"name, version, edition and dependencies versions may vary."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"scaffold-your-server",children:"Scaffold your server"}),"\n",(0,t.jsxs)(n.p,{children:["Open the ",(0,t.jsx)(n.code,{children:"src/main.rs"})," file and add the following code:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-rust",metastring:'title="src/main.rs"',children:'use axum::routing::get;\n\n#[tokio::main]\nasync fn main() {\n    let app = axum::Router::new().route("/", get(async || "Hello, World!"));\n\n    let listener = tokio::net::TcpListener::bind("0.0.0.0:8080").await.unwrap();\n    axum::serve(listener, app).await.unwrap();\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"run-in-development-mode",children:"Run in development mode"}),"\n",(0,t.jsx)(n.p,{children:"Run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo run\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Open your browser and navigate to ",(0,t.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),". You should see the message ",(0,t.jsx)(n.code,{children:"Hello, World!"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"build-and-run",children:"Build and run"}),"\n",(0,t.jsx)(n.p,{children:"To build and run your server in release mode, run the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cargo build --release\n"})}),"\n",(0,t.jsx)(n.p,{children:"Then, run the binary:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"./target/release/upb-rust-workshop\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Open your browser and navigate to ",(0,t.jsx)(n.a,{href:"http://localhost:8080",children:"http://localhost:8080"}),". You should see the message ",(0,t.jsx)(n.code,{children:"Hello, World!"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);