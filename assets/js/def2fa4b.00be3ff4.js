"use strict";(self.webpackChunkupb_rustworkshop_github_io=self.webpackChunkupb_rustworkshop_github_io||[]).push([[3659],{2588:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"tauri/build-your-own-text-editor/file-explorer-sidebar","title":"File Explorer Sidebar","description":"Build a VS Code-style file hierarchy viewer","source":"@site/docs/tauri/2.build-your-own-text-editor/2.file-explorer-sidebar.md","sourceDirName":"tauri/2.build-your-own-text-editor","slug":"/tauri/build-your-own-text-editor/file-explorer-sidebar","permalink":"/docs/tauri/build-your-own-text-editor/file-explorer-sidebar","draft":false,"unlisted":false,"editUrl":"https://github.com/UPB-RustWorkshop/upb-rustworkshop.github.io/edit/main/docs/tauri/2.build-your-own-text-editor/2.file-explorer-sidebar.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"File Explorer Sidebar"},"sidebar":"tutorialSidebar","previous":{"title":"Core Functionalities","permalink":"/docs/tauri/build-your-own-text-editor/core-funtionalities"},"next":{"title":"Create Files","permalink":"/docs/tauri/build-your-own-text-editor/create-files"}}');var t=n(4848),s=n(8453);const d={title:"File Explorer Sidebar"},l="Task 2: File Explorer Sidebar",o={},c=[{value:"<strong>1. Frontend Structure Expansion</strong>",id:"1-frontend-structure-expansion",level:3},{value:"<strong>2. Backend Command</strong>",id:"2-backend-command",level:3},{value:"<strong>3. Dynamic Hierarchy Rendering</strong>",id:"3-dynamic-hierarchy-rendering",level:3},{value:"<strong>4. Interactive Features</strong>",id:"4-interactive-features",level:3},{value:"<strong>5. Security &amp; Error Handling, if needed</strong>",id:"5-security--error-handling-if-needed",level:3},{value:"<strong>Key Technical Requirements</strong>",id:"key-technical-requirements",level:3},{value:"Conclusion Task 2",id:"conclusion-task-2",level:3}];function a(e){const r={br:"br",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"task-2-file-explorer-sidebar",children:"Task 2: File Explorer Sidebar"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Build a VS Code-style file hierarchy viewer"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"1-frontend-structure-expansion",children:(0,t.jsx)(r.strong,{children:"1. Frontend Structure Expansion"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Add a sidebar ",(0,t.jsx)(r.code,{children:"<div>"})," next to the textarea"]}),"\n",(0,t.jsxs)(r.li,{children:["Create nested HTML lists (",(0,t.jsx)(r.code,{children:"<ul>"}),", ",(0,t.jsx)(r.code,{children:"<li>"}),") to represent folders/files"]}),"\n",(0,t.jsx)(r.li,{children:"Add folder (\ud83d\udcc1) and file (\ud83d\udcc4) icons with CSS"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"2-backend-command",children:(0,t.jsx)(r.strong,{children:"2. Backend Command"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Add a new Rust function:","\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-rust",children:"#[tauri::command]\nfn get_child_paths(path: String) -> Result<Vec<(String, bool)>, String>\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Uses ",(0,t.jsx)(r.code,{children:"std::fs::read_dir"})," to list directory contents"]}),"\n",(0,t.jsxs)(r.li,{children:["Returns tuples: ",(0,t.jsx)(r.code,{children:"(path, is_directory)"})]}),"\n",(0,t.jsx)(r.li,{children:"Sorts folders first, then files"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"3-dynamic-hierarchy-rendering",children:(0,t.jsx)(r.strong,{children:"3. Dynamic Hierarchy Rendering"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:['Modify "Open File" workflow:',"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["Get file path via ",(0,t.jsx)(r.code,{children:"dialog.open()"})]}),"\n",(0,t.jsx)(r.li,{children:"Extract parent directory path"}),"\n",(0,t.jsxs)(r.li,{children:["Call ",(0,t.jsx)(r.code,{children:"get_child_paths"})," to fetch siblings"]}),"\n",(0,t.jsx)(r.li,{children:"Render initial file tree in sidebar"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"4-interactive-features",children:(0,t.jsx)(r.strong,{children:"4. Interactive Features"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Add click handlers for:","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Folders"}),": Expand/collapse with \u25b6/\u25bc arrows"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Files"}),": Load content into textarea"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.li,{children:"Recursive directory loading (fetch children on expand)"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"5-security--error-handling-if-needed",children:(0,t.jsx)(r.strong,{children:"5. Security & Error Handling, if needed"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Update ",(0,t.jsx)(r.code,{children:"tauri.conf.json"})," to allow directory traversal:","\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-json",children:'"fs": { "scope": ["$HOME/**"] }\n'})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["Handle ",(0,t.jsx)(r.code,{children:"Result"})," errors from Rust in TypeScript"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"key-technical-requirements",children:(0,t.jsx)(r.strong,{children:"Key Technical Requirements"})}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Component"}),(0,t.jsx)(r.th,{children:"Technology/Package"}),(0,t.jsx)(r.th,{children:"Purpose"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Hierarchy UI"})}),(0,t.jsx)(r.td,{children:"Recursive DOM updates"}),(0,t.jsx)(r.td,{children:"Dynamic folder expansion"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Backend"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"std::fs::read_dir"})}),(0,t.jsx)(r.td,{children:"Directory content listing"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"State"})}),(0,t.jsx)(r.td,{children:"Event delegation"}),(0,t.jsx)(r.td,{children:"Handle nested element clicks"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.strong,{children:"Performance"})}),(0,t.jsx)(r.td,{children:"On-demand loading"}),(0,t.jsx)(r.td,{children:"Only fetch visible directories"})]})]})]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h3,{id:"conclusion-task-2",children:"Conclusion Task 2"}),"\n",(0,t.jsxs)(r.p,{children:["You've transformed the basic editor into a file-centric IDE!",(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.strong,{children:'"Complexity is just simplicity with layers of intention."'}),(0,t.jsx)(r.br,{}),"\n",(0,t.jsx)(r.em,{children:"\u2014 Next: Add a create new file button!"})," \ud83d\ude80"]}),"\n",(0,t.jsx)(r.hr,{})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var i=n(6540);const t={},s=i.createContext(t);function d(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);